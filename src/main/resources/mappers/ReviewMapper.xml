<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.trip.review.mapper.ReviewMapper">
    <select id="listUserReview" resultType="ReviewDto">
        SELECT user_id as userId, spot_id as spotId, content, score, write_at as writeAt, trip_at as tripAt
        from trip.review
        where user_id = #{userId}
    </select>
    <select id="listSpotReview" resultType="ReviewDto">
        SELECT user_id as userId, spot_id as spotId, content, score, write_at as writeAt, trip_at as tripAt
        from trip.review
        where spot_id={spotId}
    </select>

    <insert id="writeReview" parameterType="ReviewDto" useGeneratedKeys="true" keyProperty="reviewNo">
        INSERT INTO trip.review (user_id, spot_id, title, content, score, write_at)
        VALUES (#{userId}, #{spotId}, #{title}, #{content}, #{score}, #{writeAt})
    </insert>


    <update id="modifyReview" parameterType="ReviewUpdateDto">
        UPDATE trip.review
        SET content = #{content}, score = #{score}
        WHERE user_id = #{userId} AND spot_id = #{spotId} AND review_no = #{reviewNo}
    </update>

    <delete id="deleteReview" parameterType="ReviewDeleteDto">
        DELETE FROM trip.review
        WHERE user_id = #{userId} AND review_no = #{reviewNo}
    </delete>

    <insert id="insertReviewPhoto">
        INSERT INTO reviewphotos (review_no, photo_url)
        VALUES (#{reviewNo}, #{photoUrl})
    </insert>

    <select id="searchReviews" resultType="ReviewResponseDto">
        SELECT r.review_no as reviewNo
        , r.title as title
        , r.content as content
        , u.user_name as userName
        , r.write_at as writeAt
        , r.score as score
        , s.spot_id as spotId
        , (CASE
        <choose>
            <when test="searchType == 'title' or searchType == 'all'">
                WHEN MATCH(r.title) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +')) IN BOOLEAN MODE) THEN 6
            </when>
        </choose>
        <choose>
            <when test="searchType == 'content' or searchType == 'all'">
                WHEN MATCH(r.content) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +')) IN BOOLEAN MODE) THEN 6
            </when>
        </choose>
        WHEN MATCH(s.title, s.addr1) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +')) IN BOOLEAN MODE) THEN 1
        END) AS relevance
        FROM review r
        JOIN users u ON r.user_id = u.user_id
        JOIN spot s ON r.spot_id = s.spot_id
        WHERE
        <choose>
            <when test="searchType == 'title'">
                MATCH(r.title) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +'), '*') IN BOOLEAN MODE)
            </when>
            <when test="searchType == 'content'">
                MATCH(r.content) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +'), '*') IN BOOLEAN MODE)
            </when>
            <otherwise>
                MATCH(r.title, r.content) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +'), '*') IN BOOLEAN MODE)
                OR MATCH(s.title, s.addr1) AGAINST(CONCAT('+', REPLACE(#{keyword}, ' ', ' +'), '*') IN BOOLEAN MODE)
            </otherwise>
        </choose>
        ORDER BY relevance DESC, r.write_at DESC
        LIMIT #{offset}, #{size}
    </select>

<!--    <select id="searchReviews" resultType="ReviewResponseDto">-->
<!--        SELECT r.review_no as reviewNo-->
<!--             , r.title as title-->
<!--             , r.content as content-->
<!--             , u.user_name as userName-->
<!--             , r.write_at as writeAt-->
<!--             , r.score as score-->
<!--             , s.spot_id as spotId-->
<!--             , (CASE-->
<!--                    WHEN MATCH(r.title) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE) THEN 8-->
<!--            WHEN MATCH(r.content) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE) THEN 4-->
<!--            WHEN MATCH(s.title, s.addr1) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE) THEN 1-->
<!--            END) AS relevance-->
<!--        FROM review r-->
<!--                 JOIN users u ON r.user_id = u.user_id-->
<!--                 JOIN spot s ON r.spot_id = s.spot_id-->
<!--        WHERE MATCH(s.title, s.addr1) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE)-->
<!--           OR MATCH(r.title, r.content) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE)-->
<!--        ORDER BY relevance DESC, r.write_at DESC-->
<!--            LIMIT #{offset}, #{size}-->
<!--    </select>-->


</mapper>